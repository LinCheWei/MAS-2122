<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<Archive name="Root">
  <!--Grasshopper archive-->
  <!--Grasshopper and GH_IO.dll are copyrighted by Robert McNeel & Associates-->
  <!--Archive generated by GH_IO.dll file utility library {0.2.0002}-->
  <items count="1">
    <item name="ArchiveVersion" type_name="gh_version" type_code="80">
      <Major>0</Major>
      <Minor>2</Minor>
      <Revision>2</Revision>
    </item>
  </items>
  <chunks count="2">
    <chunk name="Definition">
      <items count="1">
        <item name="plugin_version" type_name="gh_version" type_code="80">
          <Major>1</Major>
          <Minor>0</Minor>
          <Revision>7</Revision>
        </item>
      </items>
      <chunks count="5">
        <chunk name="DocumentHeader">
          <items count="5">
            <item name="DocumentID" type_name="gh_guid" type_code="9">b5c10c1e-8818-4fd3-bf04-41b917a09d72</item>
            <item name="Preview" type_name="gh_string" type_code="10">Shaded</item>
            <item name="PreviewMeshType" type_name="gh_int32" type_code="3">1</item>
            <item name="PreviewNormal" type_name="gh_drawing_color" type_code="36">
              <ARGB>100;150;0;0</ARGB>
            </item>
            <item name="PreviewSelected" type_name="gh_drawing_color" type_code="36">
              <ARGB>100;0;150;0</ARGB>
            </item>
          </items>
        </chunk>
        <chunk name="DefinitionProperties">
          <items count="3">
            <item name="Date" type_name="gh_date" type_code="8">637502138507981439</item>
            <item name="Description" type_name="gh_string" type_code="10"></item>
            <item name="Name" type_name="gh_string" type_code="10">04_city.ghx</item>
          </items>
          <chunks count="3">
            <chunk name="Revisions">
              <items count="1">
                <item name="RevisionCount" type_name="gh_int32" type_code="3">0</item>
              </items>
            </chunk>
            <chunk name="Projection">
              <items count="2">
                <item name="Target" type_name="gh_drawing_point" type_code="30">
                  <X>-967</X>
                  <Y>124</Y>
                </item>
                <item name="Zoom" type_name="gh_single" type_code="5">4.789214</item>
              </items>
            </chunk>
            <chunk name="Views">
              <items count="1">
                <item name="ViewCount" type_name="gh_int32" type_code="3">0</item>
              </items>
            </chunk>
          </chunks>
        </chunk>
        <chunk name="RcpLayout">
          <items count="1">
            <item name="GroupCount" type_name="gh_int32" type_code="3">0</item>
          </items>
        </chunk>
        <chunk name="GHALibraries">
          <items count="1">
            <item name="Count" type_name="gh_int32" type_code="3">1</item>
          </items>
          <chunks count="1">
            <chunk name="Library" index="0">
              <items count="6">
                <item name="AssemblyFullName" type_name="gh_string" type_code="10">GhPython, Version=6.29.20238.11501, Culture=neutral, PublicKeyToken=null</item>
                <item name="AssemblyVersion" type_name="gh_string" type_code="10">6.29.20238.11501</item>
                <item name="Author" type_name="gh_string" type_code="10"></item>
                <item name="Id" type_name="gh_guid" type_code="9">00000000-0000-0000-0000-000000000000</item>
                <item name="Name" type_name="gh_string" type_code="10"></item>
                <item name="Version" type_name="gh_string" type_code="10"></item>
              </items>
            </chunk>
          </chunks>
        </chunk>
        <chunk name="DefinitionObjects">
          <items count="1">
            <item name="ObjectCount" type_name="gh_int32" type_code="3">3</item>
          </items>
          <chunks count="3">
            <chunk name="Object" index="0">
              <items count="2">
                <item name="GUID" type_name="gh_guid" type_code="9">c552a431-af5b-46a9-a8a4-0fcbc27ef596</item>
                <item name="Name" type_name="gh_string" type_code="10">Group</item>
              </items>
              <chunks count="1">
                <chunk name="Container">
                  <items count="8">
                    <item name="Border" type_name="gh_int32" type_code="3">1</item>
                    <item name="Colour" type_name="gh_drawing_color" type_code="36">
                      <ARGB>150;170;135;255</ARGB>
                    </item>
                    <item name="Description" type_name="gh_string" type_code="10">A group of Grasshopper objects</item>
                    <item name="ID" index="0" type_name="gh_guid" type_code="9">3a21c4c3-789a-4b55-bf10-56becccf5b93</item>
                    <item name="ID_Count" type_name="gh_int32" type_code="3">1</item>
                    <item name="InstanceGuid" type_name="gh_guid" type_code="9">57720b57-54b9-4f20-8cea-0a5cfe41d6a5</item>
                    <item name="Name" type_name="gh_string" type_code="10">Group</item>
                    <item name="NickName" type_name="gh_string" type_code="10">double click to open </item>
                  </items>
                  <chunks count="1">
                    <chunk name="Attributes" />
                  </chunks>
                </chunk>
              </chunks>
            </chunk>
            <chunk name="Object" index="1">
              <items count="3">
                <item name="GUID" type_name="gh_guid" type_code="9">410755b1-224a-4c1e-a407-bf32fb45ea7e</item>
                <item name="Lib" type_name="gh_guid" type_code="9">00000000-0000-0000-0000-000000000000</item>
                <item name="Name" type_name="gh_string" type_code="10">GhPython Script</item>
              </items>
              <chunks count="1">
                <chunk name="Container">
                  <items count="11">
                    <item name="CodeInput" type_name="gh_string" type_code="10">import sys

#change this path to point to where your local mola folder is saved
#for windows users switch "\" to "/"
path = "C:/Users/pj_30/OneDrive/Desktop/Github"
if path not in sys.path:
    sys.path.append(path)

import mola
import random
from mola import module_rhino

def subdivide_by_group(mesh):
    
    newMesh = mola.Mesh()
    
    for f in mesh.faces:
        if f.group == "plot":
            
            newFaces = mola.subdivide_face_extrude_tapered(f, 0.0, 0.45, True)
            for nf in newFaces[:-1]:
                nf.group = "circulation"
                nf.color = (1,0,0)
            newFaces[-1].group = "construction"
            newFaces[-1].color = (0.5,0,1)
            newMesh.faces.extend(newFaces)
        elif f.group == "construction":
            
            if random.random() &lt; 0.2:
                # make a park
                newFaces = mola.subdivide_face_extrude_to_point_center(f, 0.1)
                for nf in newFaces:
                    nf.group = "park"
                    nf.color = (0,1,0)
                newMesh.faces.extend(newFaces)
            else:
                # make a building
                num = random.randint(5,10)
                temp = f
                for i in range(num):
                    r = random.random() * 0.6 - 0.3
                    newFaces = mola.subdivide_face_extrude_tapered(temp, 0.1, r, doCap = True)
                    for nf in newFaces[:-1]:
                        nf.group = "facade"
                        nf.color = (0,1,1)
                    newFaces[-1].group = "floor"
                    temp = newFaces[-1]
                    if i == num-1:
                        newFaces[-1].group = "roof"
                        newFaces[-1].color = (1,0,1)
                    newMesh.faces.extend(newFaces)
                    
        elif f.group == 'facade':
            # make a facade
            mesh.update_topology()
            v1 = f.vertices[0]
            v2 = f.vertices[1]
            facade_length = mola.vertex_distance(v1,v2)
            num_subdivisions = int(facade_length/0.05)
            if num_subdivisions&gt;1:
                newFaces = mola.subdivide_face_split_grid(f,num_subdivisions,1)
                for nf in newFaces:
                    nf.group = "panel"
                    nf.color = (0,0.2,0.8)
                newMesh.faces.extend(newFaces)
            else:
                f.group = "panel"
                f.color = (0,0.2,0.8)
                newMesh.faces.append(f)
                
        elif f.group =='panel':
            # details on the facade
            if random.random()&lt;0.5:
                # make a solid pyramid
                newFaces = mola.subdivide_face_extrude_to_point_center(f,0.01)
                for nf in newFaces:
                    nf.group = "solid"
                    nf.color = (0,0.1,0.1)
                newMesh.faces.extend(newFaces)
            else:
                # make a window
                newFaces = mola.subdivide_face_extrude_tapered(f, 0.01, 0.1, doCap = True)
                for nf in newFaces[:-1]:
                        nf.group = "frame"
                        nf.color = (0,0,0)
                newFaces[-1].group = "glass"
                newFaces[-1].color = (1,1,1)
                newMesh.faces.extend(newFaces)
        else:
            newMesh.faces.append(f)
    
    return newMesh
    

my_city = mola.Mesh()
a = my_city.add_vertex(0,0,0)
b = my_city.add_vertex(1,0,0)
c = my_city.add_vertex(1,1,0)
d = my_city.add_vertex(0,1,0)

my_city.add_face([a,b,c,d])


#step 1 : subdivide to center point
newMesh = mola.Mesh()

for f in my_city.faces:
    newFaces = mola.subdivide_face_extrude_to_point_center(f,0)
    newMesh.faces.extend(newFaces)

my_city = newMesh

#step 2 : catmull
my_city.update_topology()
my_city = mola.subdivide_mesh_catmull(my_city)

#step 3: split grid
newMesh = mola.Mesh()
for f in my_city.faces:
    newFaces = mola.subdivide_face_split_grid(f,2,1)
    newMesh.faces.extend(newFaces)
my_city = newMesh

#asign to all the same group
for f in my_city.faces:
    f.group = "plot"

#step 4 : make my city
for i in range(numOfIterations):
    
    my_city = subdivide_by_group(my_city)



a = module_rhino.display_mesh(my_city)</item>
                    <item name="Description" type_name="gh_string" type_code="10">GhPython provides a Python script component</item>
                    <item name="EditorLocation" type_name="gh_drawing_point" type_code="30">
                      <X>1258</X>
                      <Y>525</Y>
                    </item>
                    <item name="EditorSize" type_name="gh_drawing_size" type_code="32">
                      <W>2372</W>
                      <H>1836</H>
                    </item>
                    <item name="HideInput" type_name="gh_bool" type_code="1">true</item>
                    <item name="HideOutput" type_name="gh_bool" type_code="1">false</item>
                    <item name="InstanceGuid" type_name="gh_guid" type_code="9">3a21c4c3-789a-4b55-bf10-56becccf5b93</item>
                    <item name="IsAdvancedMode" type_name="gh_bool" type_code="1">false</item>
                    <item name="MarshalOutGuids" type_name="gh_bool" type_code="1">true</item>
                    <item name="Name" type_name="gh_string" type_code="10">GhPython Script</item>
                    <item name="NickName" type_name="gh_string" type_code="10">GhPython Script</item>
                  </items>
                  <chunks count="2">
                    <chunk name="Attributes">
                      <items count="2">
                        <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                          <X>266</X>
                          <Y>-14</Y>
                          <W>146</W>
                          <H>119</H>
                        </item>
                        <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                          <X>369</X>
                          <Y>46</Y>
                        </item>
                      </items>
                    </chunk>
                    <chunk name="ParameterData">
                      <items count="5">
                        <item name="InputCount" type_name="gh_int32" type_code="3">1</item>
                        <item name="InputId" index="0" type_name="gh_guid" type_code="9">84fa917c-1ed8-4db3-8be1-7bdc4a6495a2</item>
                        <item name="OutputCount" type_name="gh_int32" type_code="3">2</item>
                        <item name="OutputId" index="0" type_name="gh_guid" type_code="9">3ede854e-c753-40eb-84cb-b48008f14fd4</item>
                        <item name="OutputId" index="1" type_name="gh_guid" type_code="9">8ec86459-bf01-4409-baee-174d0d2b13d0</item>
                      </items>
                      <chunks count="3">
                        <chunk name="InputParam" index="0">
                          <items count="11">
                            <item name="AllowTreeAccess" type_name="gh_bool" type_code="1">true</item>
                            <item name="Description" type_name="gh_string" type_code="10">Script variable GhPython Script</item>
                            <item name="InstanceGuid" type_name="gh_guid" type_code="9">ed5839b0-3a84-40e1-b546-abb78ec1c55f</item>
                            <item name="Name" type_name="gh_string" type_code="10">numOfIterations</item>
                            <item name="NickName" type_name="gh_string" type_code="10">numOfIterations</item>
                            <item name="Optional" type_name="gh_bool" type_code="1">true</item>
                            <item name="ScriptParamAccess" type_name="gh_int32" type_code="3">0</item>
                            <item name="ShowTypeHints" type_name="gh_bool" type_code="1">true</item>
                            <item name="Source" index="0" type_name="gh_guid" type_code="9">d49fae72-0616-44ae-80cb-d77cc3486a2e</item>
                            <item name="SourceCount" type_name="gh_int32" type_code="3">1</item>
                            <item name="TypeHintID" type_name="gh_guid" type_code="9">48d01794-d3d8-4aef-990e-127168822244</item>
                          </items>
                          <chunks count="1">
                            <chunk name="Attributes">
                              <items count="2">
                                <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                                  <X>268</X>
                                  <Y>-12</Y>
                                  <W>86</W>
                                  <H>115</H>
                                </item>
                                <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                                  <X>312.5</X>
                                  <Y>45.5</Y>
                                </item>
                              </items>
                            </chunk>
                          </chunks>
                        </chunk>
                        <chunk name="OutputParam" index="0">
                          <items count="6">
                            <item name="Description" type_name="gh_string" type_code="10">The execution information, as output and error streams</item>
                            <item name="InstanceGuid" type_name="gh_guid" type_code="9">a6f68444-ea26-48c0-b7d8-fa3877f4a0ca</item>
                            <item name="Name" type_name="gh_string" type_code="10">out</item>
                            <item name="NickName" type_name="gh_string" type_code="10">out</item>
                            <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                            <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                          </items>
                          <chunks count="1">
                            <chunk name="Attributes">
                              <items count="2">
                                <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                                  <X>384</X>
                                  <Y>-12</Y>
                                  <W>26</W>
                                  <H>57</H>
                                </item>
                                <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                                  <X>397</X>
                                  <Y>16.75</Y>
                                </item>
                              </items>
                            </chunk>
                          </chunks>
                        </chunk>
                        <chunk name="OutputParam" index="1">
                          <items count="6">
                            <item name="Description" type_name="gh_string" type_code="10">Script output a.</item>
                            <item name="InstanceGuid" type_name="gh_guid" type_code="9">ac0b25b9-7bf9-4f38-8389-dd3fbfda623b</item>
                            <item name="Name" type_name="gh_string" type_code="10">a</item>
                            <item name="NickName" type_name="gh_string" type_code="10">a</item>
                            <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                            <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                          </items>
                          <chunks count="1">
                            <chunk name="Attributes">
                              <items count="2">
                                <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                                  <X>384</X>
                                  <Y>45</Y>
                                  <W>26</W>
                                  <H>58</H>
                                </item>
                                <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                                  <X>397</X>
                                  <Y>74.25</Y>
                                </item>
                              </items>
                            </chunk>
                          </chunks>
                        </chunk>
                      </chunks>
                    </chunk>
                  </chunks>
                </chunk>
              </chunks>
            </chunk>
            <chunk name="Object" index="2">
              <items count="2">
                <item name="GUID" type_name="gh_guid" type_code="9">57da07bd-ecab-415d-9d86-af36d7073abc</item>
                <item name="Name" type_name="gh_string" type_code="10">Number Slider</item>
              </items>
              <chunks count="1">
                <chunk name="Container">
                  <items count="6">
                    <item name="Description" type_name="gh_string" type_code="10">Numeric slider for single values</item>
                    <item name="InstanceGuid" type_name="gh_guid" type_code="9">d49fae72-0616-44ae-80cb-d77cc3486a2e</item>
                    <item name="Name" type_name="gh_string" type_code="10">Number Slider</item>
                    <item name="NickName" type_name="gh_string" type_code="10">Number Slider</item>
                    <item name="Optional" type_name="gh_bool" type_code="1">false</item>
                    <item name="SourceCount" type_name="gh_int32" type_code="3">0</item>
                  </items>
                  <chunks count="2">
                    <chunk name="Attributes">
                      <items count="2">
                        <item name="Bounds" type_name="gh_drawing_rectanglef" type_code="35">
                          <X>31</X>
                          <Y>35</Y>
                          <W>203</W>
                          <H>20</H>
                        </item>
                        <item name="Pivot" type_name="gh_drawing_pointf" type_code="31">
                          <X>31.77997</X>
                          <Y>35.96</Y>
                        </item>
                      </items>
                    </chunk>
                    <chunk name="Slider">
                      <items count="7">
                        <item name="Digits" type_name="gh_int32" type_code="3">3</item>
                        <item name="GripDisplay" type_name="gh_int32" type_code="3">1</item>
                        <item name="Interval" type_name="gh_int32" type_code="3">1</item>
                        <item name="Max" type_name="gh_double" type_code="6">10</item>
                        <item name="Min" type_name="gh_double" type_code="6">0</item>
                        <item name="SnapCount" type_name="gh_int32" type_code="3">0</item>
                        <item name="Value" type_name="gh_double" type_code="6">4</item>
                      </items>
                    </chunk>
                  </chunks>
                </chunk>
              </chunks>
            </chunk>
          </chunks>
        </chunk>
      </chunks>
    </chunk>
    <chunk name="Thumbnail">
      <items count="1">
        <item name="Thumbnail" type_name="gh_drawing_bitmap" type_code="37">
          <bitmap length="14432"></bitmap>
        </item>
      </items>
    </chunk>
  </chunks>
</Archive>